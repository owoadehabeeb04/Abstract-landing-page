const Notification = {
  init: options => {
    const defaultOptions = {
      el: '.js-alert-box',
      labels: ['alert_info', 'alert_success', 'alert_warning', 'alert_danger'],
      multiLang: true,
      showIcon: true,
      closeButton: true,
      showTitle: false
    };

    const newOptions = $.extend(defaultOptions, options);
    const optionsLabelsLength = newOptions.labels.length;

    function getLocale() {
      const links = window.location.href.split('/');
      const hcIndex = links.indexOf('hc');
      const links2 = links[hcIndex + 1].split('?');
      const locale = links2[0];

      return locale;
    }

    const baseURL =
      '/api/v2/help_center/articles/search.json?label_names=' +
      newOptions.labels.join();
    const baseURLWithLocale = baseURL + '&locale=' + getLocale();

    const articlesURL = newOptions.multiLang ? baseURL : baseURLWithLocale;

    $.get(articlesURL).done(res => {
      const articles = res.results;

      if (res && articles && articles.length > 0) {
        const $notifications = $('<div />', {
          class: 'notifications'
        });


        articles.forEach(item => {
          const id = item.id;
          const key = `notify-${id}`;

          if (localStorage.getItem(key)) {
            return;
          }

          let cache;
          let similarLabel;

          const articleLabelsLength = item.label_names.length;

          for (let i = 0; i < optionsLabelsLength; ++i) {
            cache = newOptions.labels[i];

            for (let j = 0; j < articleLabelsLength; ++j) {
              if (cache == item.label_names[j]) {
                similarLabel = cache;
              }
            }
          }

          const $notify = $('<div />', {
            id: id,
            'class': 'alert alert--' + similarLabel
          });

          if (newOptions.showIcon == true) {
            const $notifyShape = $('<div />', {
              'class': 'alert__shape alert__shape--main'
            }).prependTo($notify);

            $('<i />', {
              'class': 'alert__icon alert__icon--notify'
            }).prependTo($notifyShape);
          }

          const $notifyBody = $('<div />', {
            'class': 'alert__body',
            html: item.body
          }).appendTo($notify);

          if (newOptions.showTitle == true) {
            $('<div />', {
              'class': 'alert__title',
              html: item.title
            }).prependTo($notifyBody);
          }

          if (newOptions.closeButton == true) {
            const $notifyShapeClose = $('<div />', {
              'class': 'alert__shape alert__shape--close'
            }).appendTo($notify);

            const $notifyIconClose = $('<button />', {
              'class': 'alert__icon alert__icon--close',
              'aria-hidden': 'true'
            }).prependTo($notifyShapeClose);

            $notifyIconClose.click(() => {
              $notify.hide();

              localStorage.setItem(key, 'hidden');
            });
          }

          $notify.appendTo($notifications);
        });

        $notifications.prependTo(newOptions.el);
      }
    });
  }
};